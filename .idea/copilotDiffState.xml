<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/tfms-modules/common-modules/TESTING_GUIDE.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/tfms-modules/common-modules/TESTING_GUIDE.md" />
              <option name="updatedContent" value="## Quick Start Guide - Testing with Your GraphHopper API Key&#10;&#10;### Step 1: Add Your API Key&#10;&#10;Open the file:&#10;```&#10;tfms-modules/common-modules/src/main/java/com/saxion/proj/tfms/commons/utility/depotwarehouse/MainTest.java&#10;```&#10;&#10;Replace line 24:&#10;```java&#10;private static final String GRAPHHOPPER_API_KEY = &quot;YOUR_API_KEY_HERE&quot;;&#10;```&#10;&#10;With your actual API key:&#10;```java&#10;private static final String GRAPHHOPPER_API_KEY = &quot;your-actual-api-key-from-graphhopper&quot;;&#10;```&#10;&#10;### Step 2: Run the Test&#10;&#10;**Option A: Using Maven from terminal**&#10;```bash&#10;cd /home/prithvish/Documents/GitHub/02&#10;&#10;mvn -pl tfms-modules/common-modules compile exec:java \&#10;  -Dexec.mainClass=&quot;com.saxion.proj.tfms.commons.utility.depotwarehouse.MainTest&quot;&#10;```&#10;&#10;**Option B: Using IDE**&#10;- Right-click on `MainTest.java`&#10;- Select &quot;Run MainTest.main()&quot;&#10;&#10;### Expected Output&#10;&#10;```&#10;=== Truck-Warehouse Assignment Test (GraphHopper) ===&#10;&#10;Initializing GraphHopper routing...&#10;✓ GraphHopper ready (using hosted API)&#10;&#10;Creating test data (Monaco coordinates)...&#10;Testing single route...&#10;  Depot A -&gt; Warehouse X: 0.62 km, 1.34 min&#10;&#10;Computing assignments with real routing...&#10;&#10;Assigned: Truck-1 | Route: Depot A -&gt; Warehouse X&#10;Assigned: Truck-2 | Route: Depot A -&gt; Warehouse Y&#10;&#10;=== Results ===&#10;Depot: Depot A, Warehouse: Warehouse X, Truck: Truck-1, Distance: 0.62 km, Time: 1.34 min&#10;Depot: Depot A, Warehouse: Warehouse Y, Truck: Truck-2, Distance: 0.58 km, Time: 1.28 min&#10;&#10;✓ Test completed successfully!&#10;Note: Using GraphHopper hosted API (500 requests/day free tier)&#10;```&#10;&#10;### What the Test Does&#10;&#10;1. ✅ Validates your API key is set&#10;2. ✅ Connects to GraphHopper hosted API&#10;3. ✅ Tests a single route calculation&#10;4. ✅ Assigns 2 trucks to 2 warehouses based on distance/time&#10;5. ✅ Shows detailed routing results&#10;&#10;### Troubleshooting&#10;&#10;**If you see: &quot;Please set your GraphHopper API key!&quot;**&#10;- You forgot to replace `YOUR_API_KEY_HERE` with your actual key&#10;&#10;**If you see: &quot;GraphHopper API error: 401&quot;**&#10;- Your API key is invalid or expired&#10;- Double-check you copied it correctly&#10;&#10;**If you see: &quot;GraphHopper API error: 429&quot;**&#10;- You've exceeded the 500 requests/day free tier limit&#10;- Wait until tomorrow or upgrade your plan&#10;&#10;**If you see: Connection error**&#10;- Check your internet connection&#10;- Verify firewall isn't blocking GraphHopper API&#10;&#10;### Next Steps&#10;&#10;Once the test works:&#10;1. ✅ Try different profiles: change `&quot;car&quot;` to `&quot;truck&quot;` on line 44&#10;2. ✅ Test with your own coordinates&#10;3. ✅ Adjust thresholds in `AssignmentService` (currently 10km, 30min)&#10;4. ✅ Integrate into your application&#10;&#10;### API Key Security Tips&#10;&#10;⚠️ **Don't commit your API key to Git!**&#10;&#10;Better approach for production:&#10;```java&#10;// Read from environment variable&#10;private static final String GRAPHHOPPER_API_KEY = &#10;    System.getenv(&quot;GRAPHHOPPER_API_KEY&quot;);&#10;```&#10;&#10;Then set environment variable:&#10;```bash&#10;export GRAPHHOPPER_API_KEY=&quot;your-key-here&quot;&#10;```&#10;&#10;Or use application.properties:&#10;```properties&#10;graphhopper.api.key=your-key-here&#10;```&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>