# Analytics Service CI Configuration
# Uses variables from parent .gitlab-ci.yml

# Build analytics service 
build_analytics:
  stage: build
  script:
    - echo "Building $ANALYTICS_SERVICE_NAME..."
    - mvn clean compile -pl $ANALYTICS_SERVICE_PATH -am $MAVEN_CLI_OPTS
    - echo "$ANALYTICS_SERVICE_NAME build completed"
  rules: &analytics_change_rules
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "${ANALYTICS_SERVICE_PATH}/**/*"
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "${ANALYTICS_SERVICE_PATH}/**/*"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "${ANALYTICS_SERVICE_PATH}/**/*"

# Package analytics service  
package_analytics:
  stage: package
  image: $DOCKER_IMAGE
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: $DOCKER_TLS_CERTDIR
  before_script:
    - apk add --no-cache maven openjdk17
    - echo "Preparing to package $ANALYTICS_SERVICE_NAME..."
  script:
    - echo "Packaging $ANALYTICS_SERVICE_NAME with Maven..."
    - mvn package -DskipTests -pl $ANALYTICS_SERVICE_PATH -am $MAVEN_CLI_OPTS
    - echo "Building Docker image for $ANALYTICS_SERVICE_NAME..."
    - cd $ANALYTICS_SERVICE_PATH
    - docker build -t $ANALYTICS_SERVICE_NAME:$CI_COMMIT_SHA .
    - docker tag $ANALYTICS_SERVICE_NAME:$CI_COMMIT_SHA $ANALYTICS_SERVICE_NAME:latest
    - echo "Successfully built $ANALYTICS_SERVICE_NAME Docker image"
  rules: *analytics_change_rules
  artifacts:
    expire_in: 1 week
    paths:
      - "${ANALYTICS_SERVICE_PATH}/target/*.jar"

# Deploy analytics service
deploy_analytics:
  stage: deploy
  image: $DOCKER_IMAGE
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: $DOCKER_TLS_CERTDIR
  before_script:
    - apk add --no-cache docker-compose curl
  script:
    - echo "ðŸš€ Deploying $ANALYTICS_SERVICE_NAME to development environment"
    - echo "Current directory $(pwd)"
    - cd $DEPLOYMENT_PATH
    - echo "Stopping existing $ANALYTICS_SERVICE_NAME containers..."
    - docker-compose -f $DOCKER_COMPOSE_FILE down $ANALYTICS_SERVICE_NAME || true
    - echo "Building and starting $ANALYTICS_SERVICE_NAME..."
    - docker-compose -f $DOCKER_COMPOSE_FILE build $ANALYTICS_SERVICE_NAME
    - docker-compose -f $DOCKER_COMPOSE_FILE up -d $ANALYTICS_SERVICE_NAME
    - echo "Waiting for $ANALYTICS_SERVICE_NAME to start..."
    - sleep 30
    - echo "=== Deployment Status ==="
    - docker-compose -f $DOCKER_COMPOSE_FILE ps $ANALYTICS_SERVICE_NAME
    - docker-compose -f $DOCKER_COMPOSE_FILE logs --tail=20 $ANALYTICS_SERVICE_NAME
    - echo "=== Health Check ==="
    - CONTAINER_ID=$(docker-compose -f $DOCKER_COMPOSE_FILE ps -q $ANALYTICS_SERVICE_NAME)
    - echo "Container ID $CONTAINER_ID"
    - test -n "$CONTAINER_ID" || (echo "Container not found" && exit 1)
    - echo "Container is running $CONTAINER_ID"
    - echo "Container status $(docker inspect --format='{{.State.Status}}' $CONTAINER_ID)"
    - echo "Attempting health check..."
    - docker exec $CONTAINER_ID curl -f http://localhost:$ANALYTICS_SERVICE_PORT/actuator/health || echo "Health check failed but continuing"
    - echo "=== Deployment Summary ==="
    - echo "Service $ANALYTICS_SERVICE_NAME"
    - echo "Port $ANALYTICS_SERVICE_PORT" 
    - echo "Status DEPLOYED"
    - echo "$ANALYTICS_SERVICE_NAME deployed successfully"
  environment:
    name: development
    url: http://localhost:$ANALYTICS_SERVICE_PORT
  rules:
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "${ANALYTICS_SERVICE_PATH}/**/*"
      when: manual
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "${ANALYTICS_SERVICE_PATH}/**/*"
      when: manual
  dependencies:
    - package_analytics

# Test analytics service
test_analytics:
  stage: test
  script:
    - echo "Running tests for $ANALYTICS_SERVICE_NAME..."
    - mvn test -pl $ANALYTICS_SERVICE_PATH $MAVEN_CLI_OPTS
    - echo "$ANALYTICS_SERVICE_NAME tests completed"
  rules: *analytics_change_rules
  dependencies:
    - build_analytics
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit:
        - "${ANALYTICS_SERVICE_PATH}/target/surefire-reports/TEST-*.xml"
    paths:
      - "${ANALYTICS_SERVICE_PATH}/target/surefire-reports/"
