#Author : neel.k.meheta@quest.com 

# Service CI Template

# Service Configuration 
variables:
  # Update these for your service
  SERVICE_PATH: "platform/monitoring/your-service"  # Path to your service
  SERVICE_NAME: "your-service"                      # Service name
  SERVICE_PORT: "8080"                             # Service port

# Build service
build_your_service:
  stage: build
  script:
    - echo "Building $SERVICE_NAME..."
    - mvn clean compile -pl $SERVICE_PATH -am $MAVEN_CLI_OPTS
    - echo "$SERVICE_NAME build completed"
  rules: &service_change_rules
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "${SERVICE_PATH}/**/*"
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "${SERVICE_PATH}/**/*"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "${SERVICE_PATH}/**/*"

# Test service
test_your_service:
  stage: test
  script:
    - echo "Running tests for $SERVICE_NAME..."
    - mvn test -pl $SERVICE_PATH $MAVEN_CLI_OPTS
    - echo "$SERVICE_NAME tests completed"
  rules: *service_change_rules
  dependencies:
    - build_your_service
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit:
        - "${SERVICE_PATH}/target/surefire-reports/TEST-*.xml"
    paths:
      - "${SERVICE_PATH}/target/surefire-reports/"

# Package service
package_your_service:
  stage: package
  image: $DOCKER_IMAGE
  services:
    - name: docker:20.10.16-dind
      alias: docker
      command: ["--tls=false"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - apk add --no-cache maven openjdk17
    - echo "Preparing to package $SERVICE_NAME..."
    - sleep 10
    - docker info
  script:
    - echo "Packaging $SERVICE_NAME with Maven..."
    - mvn package -DskipTests -pl $SERVICE_PATH -am $MAVEN_CLI_OPTS
    - echo "Building Docker image for $SERVICE_NAME..."
    - cd $SERVICE_PATH
    - docker build -t $SERVICE_NAME:$CI_COMMIT_SHA .
    - docker tag $SERVICE_NAME:$CI_COMMIT_SHA $SERVICE_NAME:latest
    - echo "Successfully built $SERVICE_NAME Docker image"
  rules: *service_change_rules
  artifacts:
    expire_in: 1 week
    paths:
      - "${SERVICE_PATH}/target/*.jar"

# Deploy service
deploy_your_service:
  stage: deploy
  image: $DOCKER_IMAGE
  services:
    - name: docker:20.10.16-dind
      alias: docker
      command: ["--tls=false"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    - apk add --no-cache docker-compose curl
    - echo "Waiting for Docker daemon to start..."
    - sleep 10
    - docker info
  script:
    - echo "ðŸš€ Deploying $SERVICE_NAME to development environment"
    - cd $DEPLOYMENT_PATH
    - echo "Stopping existing $SERVICE_NAME containers..."
    - docker-compose -f $DOCKER_COMPOSE_FILE down $SERVICE_NAME || true
    - echo "Building and starting $SERVICE_NAME..."
    - docker-compose -f $DOCKER_COMPOSE_FILE build $SERVICE_NAME
    - docker-compose -f $DOCKER_COMPOSE_FILE up -d $SERVICE_NAME
    - echo "Waiting for $SERVICE_NAME to start..."
    - sleep 30
    - echo "=== Health Check ==="
    - CONTAINER_ID=$(docker-compose -f $DOCKER_COMPOSE_FILE ps -q $SERVICE_NAME)
    - docker exec $CONTAINER_ID curl -f http://localhost:$SERVICE_PORT/actuator/health || echo "Health check failed"
    - echo "$SERVICE_NAME deployed successfully"
  environment:
    name: development
    url: http://localhost:$SERVICE_PORT
  rules:
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "${SERVICE_PATH}/**/*"
      when: manual
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "${SERVICE_PATH}/**/*"
      when: manual
  dependencies:
    - package_your_service
