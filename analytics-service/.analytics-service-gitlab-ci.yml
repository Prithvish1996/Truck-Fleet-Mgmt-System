# Analytics Service CI/CD - Complete Configuration

variables:
  SERVICE_NAME: "analytics-service"
  SERVICE_PORT: "8090"

# Build analytics service
build_analytics:
  stage: build
  script:
    - echo "Building $SERVICE_NAME..."
    - mvn clean compile -pl $SERVICE_NAME -am $MAVEN_CLI_OPTS
    - echo "‚úÖ $SERVICE_NAME build completed"
  rules:
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "analytics-service/**/*"
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "analytics-service/**/*"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "analytics-service/**/*"

# Package analytics service  
package_analytics:
  stage: package
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache maven openjdk17
    - echo "Preparing to package $SERVICE_NAME..."
  script:
    - echo "Packaging $SERVICE_NAME with Maven..."
    - mvn package -DskipTests -pl $SERVICE_NAME -am $MAVEN_CLI_OPTS
    - echo "Building Docker image for $SERVICE_NAME..."
    # Build Docker image
    - cd analytics-service
    - docker build -t $SERVICE_NAME:$CI_COMMIT_SHA .
    - docker tag $SERVICE_NAME:$CI_COMMIT_SHA $SERVICE_NAME:latest
    - echo "‚úÖ Successfully built $SERVICE_NAME Docker image"
  rules:
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "analytics-service/**/*"
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "analytics-service/**/*"
  artifacts:
    expire_in: 1 week
    paths:
      - "analytics-service/target/*.jar"

# Deploy analytics service
deploy_analytics:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache docker-compose curl
  script:
    - echo "üöÄ Deploying $SERVICE_NAME to development environment"
    - echo "Current directory $(pwd)"
    - echo "Stopping existing $SERVICE_NAME containers..."
    - docker-compose down $SERVICE_NAME || true
    - echo "Building and starting $SERVICE_NAME..."
    - docker-compose build $SERVICE_NAME
    - docker-compose up -d $SERVICE_NAME
    - echo "Waiting for $SERVICE_NAME to start..."
    - sleep 30
    - echo "=== Deployment Status ==="
    - docker-compose ps $SERVICE_NAME
    - docker-compose logs --tail=20 $SERVICE_NAME
    - echo "=== Health Check ==="
    - CONTAINER_ID=$(docker-compose ps -q $SERVICE_NAME)
    - echo "Container ID $CONTAINER_ID"
    - test -n "$CONTAINER_ID" || (echo "‚ùå Container not found" && exit 1)
    - echo "‚úÖ Container is running $CONTAINER_ID"
    - echo "Container status $(docker inspect --format='{{.State.Status}}' $CONTAINER_ID)"
    - echo "Attempting health check..."
    - docker exec $CONTAINER_ID curl -f http://localhost:$SERVICE_PORT/actuator/health || echo "Health check failed but continuing"
    - echo "=== Deployment Summary ==="
    - echo "Service $SERVICE_NAME"
    - echo "Port $SERVICE_PORT" 
    - echo "Status DEPLOYED"
    - echo "‚úÖ $SERVICE_NAME deployed successfully"
  environment:
    name: development
    url: http://localhost:8090
  rules:
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "analytics-service/**/*"
      when: manual
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "analytics-service/**/*"
      when: manual
  dependencies:
    - package_analytics

# Test analytics service
test_analytics:
  stage: test
  script:
    - echo "Running tests for $SERVICE_NAME..."
    - mvn test -pl $SERVICE_NAME $MAVEN_CLI_OPTS
    - echo "‚úÖ $SERVICE_NAME tests completed"
  rules:
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_1'
      changes:
        - "analytics-service/**/*"
    - if: '$CI_COMMIT_BRANCH == $TARGET_BRANCH_2'
      changes:
        - "analytics-service/**/*"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "analytics-service/**/*"
  dependencies:
    - build_analytics
  artifacts:
    when: always
    expire_in: 1 week
    reports:
      junit:
        - "analytics-service/target/surefire-reports/TEST-*.xml"
    paths:
      - "analytics-service/target/surefire-reports/"
